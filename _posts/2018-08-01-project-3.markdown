---
layout: default
project-id: 3
date: 2018-08-01
title: IRCLogParser
project-date: Feb 2018
img: project-3.jpg
alt: A chat system in use
category: Text Mining, Natural Language Processing
link-type: GitHub
link: //github.com/tejalwakchoure/IRCLogParser

summary: A desktop-based NLP application that uses clustering analysis and inferential modelling to study user interactions on different levels on the Ubuntu IRC networking service by modelling aggregate graphs, temporal graphs, and heat maps.

description: With the increased use of Open Source software, Internet Relay Chats (IRC) has become a popular form of synchronous communication. The primary objective of this study was to track the development of the Ubuntu IRC forum community over time and examine the dynamically changing participation patterns to delineate substructures and calculate the frequency of topics discussed in the network. Among other forms of computer-mediated communication, it is interesting to examine IRC’s because “people who are located in geographically distant locales...who might otherwise never come into contact, can engage in real-time interactions” [9]. <br /> <br /> Our analysis aims to -
- Enable the construction of a community model for information flow. This can help implement collaborative learning tools to assist and assess knowledge transfer in online communities and filter messages to split participants into different groups for greater efficiency.
We provided a new perspective on the network skeleton that helped generalize the pattern of relationships. We relied on the Natural Language Processing (NLP) approaches of reply structure and word context for studying linguistic behaviour and extracting a social network, followed by Gephi for clustering analysis and inferential modelling.
- Benefit Open Source developers and the learning community by capturing the topic-wise rate of discussion by experts. For example, large quantities of information flow leading to increasing traffic on a particular link can enable us to leverage the popularity of a concept by mining linguistic patterns to motivate other groups. Participants are often subjected to long wait times until experts are available to resolve their queries, increasing the possibility that the question gets buried under others. We aim to reduce this loss of information exchange by identifying the times of day when queries are most likely to be resolved. Detecting the distinct topics that IRC users converse about can also help match users to appropriate chat rooms, optimizing chat queries, and tracking topic changes within the channel.
I incorporated the approach into a user-operated and administrator-operated, python-based message analysis application for chat topic detection in experts’ messages, thereby increasing the efficiency and ease of usage of the forum by non-experts substantially.

---
